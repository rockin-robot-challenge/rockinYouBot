#!/usr/bin/python
import rospy
import tf
from visualization_msgs.msg import *

if (__name__ == "__main__"):
  
    rospy.init_node('rockin_navigation_goals_as_marker', anonymous=True)
    location_publisher = rospy.Publisher("/visualization_marker_array", MarkerArray)
    
    while not rospy.is_shutdown():
		rospy.sleep(5) 

		marker_array = MarkerArray()
		
		if not rospy.has_param('/script_server/base'):
			continue 

		param_list = rospy.get_param('/script_server/base')
		counter=0
		
		for item in param_list:
			pose = rospy.get_param('/script_server/base/' + item)

			single_marker = Marker()
			single_marker_text = Marker()

			single_marker.header.frame_id = single_marker_text.header.frame_id = "/map"
			single_marker.header.stamp = single_marker_text.header.stamp = rospy.Time.now()
			single_marker.ns = single_marker_text.ns = "base navigation goals"
			single_marker.action = single_marker_text.action = 0

			single_marker.id = counter
			single_marker_text.id = counter+1
			counter+=2
		
			single_marker_text.type = 9
			single_marker.type = 0

			single_marker.pose.position.x = single_marker_text.pose.position.x = pose[0]
			single_marker.pose.position.y = single_marker_text.pose.position.y = pose[1]
			single_marker.pose.position.z = single_marker_text.pose.position.z = 0.0

			(qx,qy,qz,qw) = tf.transformations.quaternion_from_euler(0.0, 0.0, pose[2])

			single_marker.pose.orientation.x = single_marker_text.pose.orientation.x = qx
			single_marker.pose.orientation.y = single_marker_text.pose.orientation.y = qy
			single_marker.pose.orientation.z = single_marker_text.pose.orientation.z = qz
			single_marker.pose.orientation.w = single_marker_text.pose.orientation.w = qw

			single_marker_text.text = item

			single_marker.scale.x = 0.6
			single_marker.scale.y = 0.05
			single_marker.scale.z = 0.05
			single_marker.color.r = 1.0
			single_marker.color.g = 0.0
			single_marker.color.b = 0.0
			single_marker.color.a = 0.5

			single_marker_text.scale.x = 0.17
			single_marker_text.scale.y = 0.17
			single_marker_text.scale.z = 0.17
			single_marker_text.color.r = 1.0
			single_marker_text.color.g = 1.0
			single_marker_text.color.b = 1.0
			single_marker_text.color.a = 1.0

			single_marker.lifetime = single_marker_text.lifetime = rospy.Duration(5)

			marker_array.markers.append(single_marker)
			marker_array.markers.append(single_marker_text)

		location_publisher.publish(marker_array)   
